---
import rolling from "../assets/06-Urban-Wax-Rollin-Intelligence.mp3";



---

<link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />

<div class="player">
  <div class="logo">
    <i class="bx bx-music"></i>
  </div>

  <span id="musicName"></span>

  <audio id="player" src=""></audio>
  <div class="controls">
    <button id="prevButton"><i class="bx bx-skip-previous"></i></button>
    <button id="playPauseButton"><i class="bx bx-caret-right"></i></button>
    <button id="nextButton"><i class="bx bx-skip-next"></i></button>
  </div>
  <div class="footer">
    <div class="progress-bar">
      <div class="progress"></div>
    </div>
    <div class="time">
      <span id="currentTime">0:00</span>
      <span id="duration">0:00</span>
    </div>
  </div>
</div>

<script is:inline >
// JavaScript code
const player = document.querySelector("#player");
const musicName = document.querySelector("#musicName");
const playPauseButton = document.querySelector("#playPauseButton");
const prevButton = document.querySelector("#prevButton");
const nextButton = document.querySelector("#nextButton");
const currentTime = document.querySelector("#currentTime");
const duration = document.querySelector("#duration");
const progressBar = document.querySelector(".progress-bar");
const progress = document.querySelector(".progress");

const songs = [
    {
        src: '/assets/06-Urban-Wax-Rollin-Intelligence.mp3', // Corrected path
        name: "test song",
    },
    {
        src: "./assets/your-second-song.mp3", // Corrected path for the second song
        name: "test song 2",
    },
];

const textButtonPlay = "<i class='bx bx-caret-right'></i>";
const textButtonPause = "<i class='bx bx-pause'></i>";

let index = 0;

prevButton.onclick = () => prevNextMusic("prev");
nextButton.onclick = () => prevNextMusic();

playPauseButton.onclick = () => {
    if (player.src) {
        playPause();
    }
};

const playPause = () => {
    if (player.paused) {
        player.play().catch((error) => {
            // Handle any errors that might occur while trying to play the audio
            console.error(error);
        });
        playPauseButton.innerHTML = textButtonPause;
    } else {
        player.pause();
        playPauseButton.innerHTML = textButtonPlay;
    }
};

player.ontimeupdate = () => updateTime();

const updateTime = () => {
    const currentMinutes = Math.floor(player.currentTime / 60);
    const currentSeconds = Math.floor(player.currentTime % 60);
    currentTime.textContent = currentMinutes + ":" + formatZero(currentSeconds);

    const durationFormatted = isNaN(player.duration) ? 0 : player.duration;
    const durationMinutes = Math.floor(durationFormatted / 60);
    const durationSeconds = Math.floor(durationFormatted % 60);
    duration.textContent = durationMinutes + ":" + formatZero(durationSeconds);

    const progressWidth = durationFormatted ? (player.currentTime / durationFormatted) * 100 : 0;

    progress.style.width = progressWidth + "%";
};

const formatZero = (n) => (n < 10 ? "0" + n : n);

progressBar.onclick = (e) => {
    const newTime = (e.offsetX / progressBar.offsetWidth) * player.duration;
    player.currentTime = newTime;
};

const prevNextMusic = (type = "next") => {
    if ((type == "next" && index + 1 === songs.length) || type === "init") {
        index = 0;
    } else if (type == "prev" && index === 0) {
        index = songs.length - 1; // Corrected the index calculation
    } else {
        index = type === "prev" && index ? index - 1 : index + 1;
    }

    player.src = songs[index].src;
    musicName.innerHTML = songs[index].name;
    if (type !== "init") playPause();

    updateTime();
};

prevNextMusic("init");
</script>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: sans-serif;
  }

  .player {
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-direction: column;
    max-width: 400px;
    width: 100%;
    height: 500px;
    margin: 0 10px;
    box-shadow: 0 1px 10px gray;
    padding: 10px;
    border-radius: 5px;
  }

  .logo {
    background-color: #f7f7f7;
    width: 100%;
    height: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 5px;
  }

  .logo i {
    font-size: 200px;
  }

  #musicName {
    white-space: nowrap;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 30px;
  }

  .controls button {
    border: none;
    background-color: white;
    cursor: pointer;
  }

  .controls i {
    font-size: 60px;
    padding: 5px;
    border-radius: 50%;
    background-color: #f7f7f7;
    transition: all 0.2s;
  }

  .controls i:hover {
    background-color: lightgray;
  }

  .time {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .time span {
    font-size: 22px;
    color: #333;
  }

  .footer {
    width: 100%;
  }

  .progress-bar {
    height: 8px;
    background-color: #ddd;
    cursor: pointer;
    margin-bottom: 5px;
    border-radius: 5px;
  }

  .progress {
    height: 8px;
    background-color: #333;
    border-radius: 5px;
  }
</style>
